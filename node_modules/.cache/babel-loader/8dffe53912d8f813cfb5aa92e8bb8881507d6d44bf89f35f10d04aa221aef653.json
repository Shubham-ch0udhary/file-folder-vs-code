{"ast":null,"code":"const fileTree = [{\n  name: \"src\",\n  type: \"folder\",\n  children: [{\n    name: \"components\",\n    type: \"folder\",\n    children: [{\n      name: \"UI\",\n      type: \"folder\",\n      children: [{\n        name: \"buttons\",\n        type: \"folder\",\n        children: [{\n          name: \"PrimaryButton.jsx\",\n          type: \"file\"\n        }, {\n          name: \"SecondaryButton.jsx\",\n          type: \"file\"\n        }]\n      }, {\n        name: \"inputs\",\n        type: \"folder\",\n        children: [{\n          name: \"TextInput.jsx\",\n          type: \"file\"\n        }, {\n          name: \"Checkbox.jsx\",\n          type: \"file\"\n        }]\n      }]\n    }, {\n      name: \"Header.jsx\",\n      type: \"file\"\n    }, {\n      name: \"Footer.jsx\",\n      type: \"file\"\n    }]\n  }, {\n    name: \"utils\",\n    type: \"folder\",\n    children: [{\n      name: \"helpers.js\",\n      type: \"file\"\n    }, {\n      name: \"constants.js\",\n      type: \"file\"\n    }, {\n      name: \"validation\",\n      type: \"folder\",\n      children: [{\n        name: \"formValidation.js\",\n        type: \"file\"\n      }, {\n        name: \"inputRules.js\",\n        type: \"file\"\n      }]\n    }]\n  }, {\n    name: \"App.js\",\n    type: \"file\"\n  }, {\n    name: \"index.js\",\n    type: \"file\"\n  }]\n}, {\n  name: \"public\",\n  type: \"folder\",\n  children: [{\n    name: \"assets\",\n    type: \"folder\",\n    children: [{\n      name: \"logo.png\",\n      type: \"file\"\n    }, {\n      name: \"images\",\n      type: \"folder\",\n      children: [{\n        name: \"banner.jpg\",\n        type: \"file\"\n      }, {\n        name: \"background.png\",\n        type: \"file\"\n      }]\n    }]\n  }, {\n    name: \"index.html\",\n    type: \"file\"\n  }, {\n    name: \"favicon.ico\",\n    type: \"file\"\n  }]\n}, {\n  name: \"package.json\",\n  type: \"file\"\n}, {\n  name: \"README.md\",\n  type: \"file\"\n}];\nexport const getDataWithId = () => {\n  const getData = (data, id = '') => {\n    return data === null || data === void 0 ? void 0 : data.map(item => {\n      let key = id ? `${id}/${item.name}` : `/${item.name}`;\n      return {\n        ...item,\n        id: key,\n        ...(item.children && {\n          children: getData(item.children, key)\n        })\n      };\n    });\n  };\n  return getData(fileTree);\n};","map":{"version":3,"names":["fileTree","name","type","children","getDataWithId","getData","data","id","map","item","key"],"sources":["/Users/shubhamchoudhary/Documents/assignment/nested-file-folder/src/fileStructureData.js"],"sourcesContent":["const fileTree = [\n    {\n      name: \"src\",\n      type: \"folder\",\n      children: [\n        {\n          name: \"components\",\n          type: \"folder\",\n          children: [\n            {\n              name: \"UI\",\n              type: \"folder\",\n              children: [\n                {\n                  name: \"buttons\",\n                  type: \"folder\",\n                  children: [\n                    { name: \"PrimaryButton.jsx\", type: \"file\" },\n                    { name: \"SecondaryButton.jsx\", type: \"file\" },\n                  ],\n                },\n                {\n                  name: \"inputs\",\n                  type: \"folder\",\n                  children: [\n                    { name: \"TextInput.jsx\", type: \"file\" },\n                    { name: \"Checkbox.jsx\", type: \"file\" },\n                  ],\n                },\n              ],\n            },\n            { name: \"Header.jsx\", type: \"file\" },\n            { name: \"Footer.jsx\", type: \"file\" },\n          ],\n        },\n        {\n          name: \"utils\",\n          type: \"folder\",\n          children: [\n            { name: \"helpers.js\", type: \"file\" },\n            { name: \"constants.js\", type: \"file\" },\n            {\n              name: \"validation\",\n              type: \"folder\",\n              children: [\n                { name: \"formValidation.js\", type: \"file\" },\n                { name: \"inputRules.js\", type: \"file\" },\n              ],\n            },\n          ],\n        },\n        { name: \"App.js\", type: \"file\" },\n        { name: \"index.js\", type: \"file\" },\n      ],\n    },\n    {\n      name: \"public\",\n      type: \"folder\",\n      children: [\n        {\n          name: \"assets\",\n          type: \"folder\",\n          children: [\n            { name: \"logo.png\", type: \"file\" },\n            {\n              name: \"images\",\n              type: \"folder\",\n              children: [\n                { name: \"banner.jpg\", type: \"file\" },\n                { name: \"background.png\", type: \"file\" },\n              ],\n            },\n          ],\n        },\n        { name: \"index.html\", type: \"file\" },\n        { name: \"favicon.ico\", type: \"file\" },\n      ],\n    },\n    { name: \"package.json\", type: \"file\" },\n    { name: \"README.md\", type: \"file\" },\n  ];\n\n  export const getDataWithId = () => {\n    const getData = (data, id = '') => {\n        return data?.map((item) => {\n            let key = id ?  `${id}/${item.name}` : `/${item.name}`;\n            return {\n                ...item,\n                id: key,\n                ...(item.children && {children: getData(item.children, key)})\n            }\n        })\n    }\n    return getData(fileTree);\n  }"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,CACb;EACEC,IAAI,EAAE,KAAK;EACXC,IAAI,EAAE,QAAQ;EACdC,QAAQ,EAAE,CACR;IACEF,IAAI,EAAE,YAAY;IAClBC,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE,CACR;MACEF,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE,QAAQ;MACdC,QAAQ,EAAE,CACR;QACEF,IAAI,EAAE,SAAS;QACfC,IAAI,EAAE,QAAQ;QACdC,QAAQ,EAAE,CACR;UAAEF,IAAI,EAAE,mBAAmB;UAAEC,IAAI,EAAE;QAAO,CAAC,EAC3C;UAAED,IAAI,EAAE,qBAAqB;UAAEC,IAAI,EAAE;QAAO,CAAC;MAEjD,CAAC,EACD;QACED,IAAI,EAAE,QAAQ;QACdC,IAAI,EAAE,QAAQ;QACdC,QAAQ,EAAE,CACR;UAAEF,IAAI,EAAE,eAAe;UAAEC,IAAI,EAAE;QAAO,CAAC,EACvC;UAAED,IAAI,EAAE,cAAc;UAAEC,IAAI,EAAE;QAAO,CAAC;MAE1C,CAAC;IAEL,CAAC,EACD;MAAED,IAAI,EAAE,YAAY;MAAEC,IAAI,EAAE;IAAO,CAAC,EACpC;MAAED,IAAI,EAAE,YAAY;MAAEC,IAAI,EAAE;IAAO,CAAC;EAExC,CAAC,EACD;IACED,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE,CACR;MAAEF,IAAI,EAAE,YAAY;MAAEC,IAAI,EAAE;IAAO,CAAC,EACpC;MAAED,IAAI,EAAE,cAAc;MAAEC,IAAI,EAAE;IAAO,CAAC,EACtC;MACED,IAAI,EAAE,YAAY;MAClBC,IAAI,EAAE,QAAQ;MACdC,QAAQ,EAAE,CACR;QAAEF,IAAI,EAAE,mBAAmB;QAAEC,IAAI,EAAE;MAAO,CAAC,EAC3C;QAAED,IAAI,EAAE,eAAe;QAAEC,IAAI,EAAE;MAAO,CAAC;IAE3C,CAAC;EAEL,CAAC,EACD;IAAED,IAAI,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAO,CAAC,EAChC;IAAED,IAAI,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAO,CAAC;AAEtC,CAAC,EACD;EACED,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,QAAQ;EACdC,QAAQ,EAAE,CACR;IACEF,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE,CACR;MAAEF,IAAI,EAAE,UAAU;MAAEC,IAAI,EAAE;IAAO,CAAC,EAClC;MACED,IAAI,EAAE,QAAQ;MACdC,IAAI,EAAE,QAAQ;MACdC,QAAQ,EAAE,CACR;QAAEF,IAAI,EAAE,YAAY;QAAEC,IAAI,EAAE;MAAO,CAAC,EACpC;QAAED,IAAI,EAAE,gBAAgB;QAAEC,IAAI,EAAE;MAAO,CAAC;IAE5C,CAAC;EAEL,CAAC,EACD;IAAED,IAAI,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAO,CAAC,EACpC;IAAED,IAAI,EAAE,aAAa;IAAEC,IAAI,EAAE;EAAO,CAAC;AAEzC,CAAC,EACD;EAAED,IAAI,EAAE,cAAc;EAAEC,IAAI,EAAE;AAAO,CAAC,EACtC;EAAED,IAAI,EAAE,WAAW;EAAEC,IAAI,EAAE;AAAO,CAAC,CACpC;AAED,OAAO,MAAME,aAAa,GAAGA,CAAA,KAAM;EACjC,MAAMC,OAAO,GAAGA,CAACC,IAAI,EAAEC,EAAE,GAAG,EAAE,KAAK;IAC/B,OAAOD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,GAAG,CAAEC,IAAI,IAAK;MACvB,IAAIC,GAAG,GAAGH,EAAE,GAAI,GAAGA,EAAE,IAAIE,IAAI,CAACR,IAAI,EAAE,GAAG,IAAIQ,IAAI,CAACR,IAAI,EAAE;MACtD,OAAO;QACH,GAAGQ,IAAI;QACPF,EAAE,EAAEG,GAAG;QACP,IAAID,IAAI,CAACN,QAAQ,IAAI;UAACA,QAAQ,EAAEE,OAAO,CAACI,IAAI,CAACN,QAAQ,EAAEO,GAAG;QAAC,CAAC;MAChE,CAAC;IACL,CAAC,CAAC;EACN,CAAC;EACD,OAAOL,OAAO,CAACL,QAAQ,CAAC;AAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}